#!/usr/bin/env python

from argparse import ArgumentParser
import contextlib
from sys import stdout, path
from pathlib import Path


# Append bifrost package to path
path.append(Path("__file__").parent.parent.absolute())

import bifrost.main as main

@contextlib.contextmanager
def writer(filename):
    if filename is None:
        out = stdout
    else:
        assert not Path(
            filename
        ).exists(), f"Filename {filename} already exist and cannot be overwritten"
        out = open(filename, "w")
    yield out
    if filename is not None:
        out.close()


parser = ArgumentParser("Bifrost - Parsing Norse modules into SpiNNaker executables")
parser.add_argument(
    "model",
    type=str,
    help="The path to the model as a python import statement, e. g. my_model.snn.SNNModel",
)
parser.add_argument(
    "shape",
    type=str,
    help="The shape of the input data to provide, e. g. (8, 3, 28, 28) in BCXY format",
)
parser.add_argument("-o", "--output", type=str, default=None)

args = parser.parse_args()
with writer(args.output) as output_writer:
    main.export(args.model, args.shape, output_writer)
